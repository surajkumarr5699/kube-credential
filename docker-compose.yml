version: '3.8'

services:
  issuance-service:
    build:
      context: ./services/issuance-service
      dockerfile: Dockerfile
    container_name: issuance-service
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
    volumes:
      - issuance-data:/app/data
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - kube-credential-network

  verification-service:
    build:
      context: ./services/verification-service
      dockerfile: Dockerfile
    container_name: verification-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - NODE_ENV=development
      - ISSUANCE_SERVICE_URL=http://issuance-service:3001
    volumes:
      - verification-data:/app/data
    depends_on:
      - issuance-service
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3002/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - kube-credential-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - issuance-service
      - verification-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - kube-credential-network

volumes:
  issuance-data:
    driver: local
  verification-data:
    driver: local

networks:
  kube-credential-network:
    driver: bridge
